.PHONY: all, clean, fclean, re, obj, norme, libft

LEMIN = lem-in
CC = gcc
FLAGS = -Wall -Wextra -Werror -g

SRCS_NAME = main.c ft_parse_file.c ft_errors.c ft_parse_rooms.c \
ft_parse_links.c ft_solve.c ft_verbose.c ft_print.c

SRCSDIR = srcs
SRCS = $(addprefix $(SRCSDIR)/, $(SRCS_NAME))

OBJSDIR = objs
OBJS = $(addprefix $(OBJSDIR)/, $(SRCS_NAME:.c=.o))

INC = lemin.h
INCSDIR = includes
INCLUDE = -I $(INCSLIB) -I $(INCSDIR)

LIB_PATH = libft
INCSLIB = $(LIB_PATH)/includes
LIBFT = $(LIB_PATH)/libft.a
LIBLINK = -L./$(LIB_PATH) -lft

all: libft $(LEMIN)

$(LEMIN): $(OBJS) $(LIBFT)
	@$(CC) $(FLAGS) -o $@ $(OBJS) $(LIBLINK)
	@echo "Compilation de lem-in OK"

$(OBJSDIR)/%.o: $(SRCSDIR)/%.c $(INCSDIR)/$(INC)
	@mkdir -p $(OBJSDIR)
	@$(CC) $(FLAGS) $(INCLUDE) -c -o $@ $<
	@echo "Creation de " $< " OK"

libft:
	@make -C $(LIB_PATH)

norme:
	@echo "Lancement de la norminette..."
	@echo "Dossier srcs :"
	@norminette srcs
	@echo "Dossier includes :"
	@norminette $(INCSDIR)
	@make -C $(LIB_PATH) norme

clean:
	@rm -rf $(OBJSDIR)
	@make -C $(LIB_PATH) clean
	@echo "Supression des objets de lem-in OK"

fclean: clean
	@rm -f $(LEMIN)
	@rm -f $(LIBFT)
	@echo "Suppression de libft.a OK"
	@echo "Suppression de lem-in OK"

re: fclean all